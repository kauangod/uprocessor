opcodes:
    0000 -> nop
    0001 -> LD
    0010 -> regs
    0011 -> jump
    -----------------
*obs: rd 111 = acumulador
    -----------------
Instrução I:  imm (16 downto 7) | rd (6 downto 4) | opcode (3 downto 0) -> LD
    -----------------
Instrução R: rs (12 downto 10) | funct (9 downto 7) | rd (6 downto 4) | opcode (3 downto 0)
    -> funct:
    ----- ULA -------
        -> 000 - sum
        -> 001 - sub
        -> 010 - xor_op
        -> 011 - r_shift, obs: rs -> shift_n
    -----------------
        -> 100 - mov (somente A->rd ou rs->A)
        -> 101 - CMPR
    -----------------
Instrução J: imm (16 downto 10) | funct (9 downto 7) | opcode (3 downto 0)
    -> funct:
        -> 000 - jump
        -> 001 - CMPI
        -> 010 - BLE
        -> 011 - BMI
    ------------------
